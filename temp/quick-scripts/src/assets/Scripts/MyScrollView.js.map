{"version":3,"sources":["assets\\Scripts\\MyScrollView.js"],"names":["cc","Class","Component","properties","pfb_item","type","Prefab","node_content","Node","itemSpace","onLoad","dataSet","activeNodes","itemHeight","data","height","lineHeight","visitedItemCount","parseInt","node","extraItemCount","activeItemCount","safeAreaHeight","activeAreaHeight","contentNodeLastY","contentHeight","activeHeadIndex","activeTailIndex","on","onScrolling","init","eventListener","setData","length","removeAllChildren","number","Math","min","i","instantiate","getComponent","BaseItem","setItemNode","addChild","push","index","comp","setItem","y","scrollUp","headNode","dis_head","shift","tailNode","pop","unshift"],"mappings":"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","sourceRoot":"/","sourcesContent":["import BaseItem from './BaseItem';\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 子节点预制件\r\n        pfb_item: { type: cc.Prefab, default: null },\r\n        // 父节点\r\n        node_content: { type: cc.Node, default: null },\r\n\r\n        // 子节点间距\r\n        itemSpace: 20,\r\n    },\r\n\r\n    // 初始化数据\r\n    onLoad () {\r\n        this.dataSet = [];\r\n        // 当前活跃节点数组 是从头到尾排的\r\n        this.activeNodes = [];\r\n        \r\n        // 计算\r\n        this.itemHeight = this.pfb_item.data.height;\r\n        // 单行高度 一个子节点+一个间距\r\n        this.lineHeight = this.itemHeight + this.itemSpace;\r\n        // 可视的节点数量（屏幕可以显示的）\r\n        this.visitedItemCount = parseInt(this.node.height / (this.lineHeight));\r\n        // 额外的节点数量\r\n        this.extraItemCount = (this.visitedItemCount + 1) >> 1;\r\n        // 活跃的节点数量 = 可视节点 + 2*额外节点\r\n        this.activeItemCount = this.visitedItemCount + this.extraItemCount * 2;\r\n        // console.log(this.visitedItemCount, this.extraItemCount, this.activeItemCount);\r\n        \r\n        // 安全区域高度\r\n        this.safeAreaHeight = this.extraItemCount * this.lineHeight;\r\n        // 活跃区域高度\r\n        this.activeAreaHeight = this.activeItemCount * this.lineHeight;\r\n\r\n        // 父节点上一次的y，用于计算是上滑还是下滑\r\n        this.contentNodeLastY = 0;\r\n        // 父节点高度\r\n        this.contentHeight = 500;\r\n\r\n        // 活跃的头节点的下标\r\n        this.activeHeadIndex = 0;\r\n        // 活跃的尾节点的下标\r\n        this.activeTailIndex = 0;\r\n        \r\n        // 监听滚动事件\r\n        this.node.on('scrolling', this.onScrolling, this);\r\n    },\r\n    \r\n    init(eventListener){\r\n        // 传递事件监听器\r\n        this.eventListener = eventListener;\r\n    },\r\n\r\n    setData(dataSet){\r\n        this.dataSet = dataSet;\r\n        // 计算父节点的高度\r\n        this.contentHeight = this.dataSet.length * (this.lineHeight);\r\n        // 设置高度\r\n        this.node_content.height = this.contentHeight;\r\n        // 清空父节点\r\n        this.node_content.removeAllChildren(true);\r\n        \r\n        // 有可能数据比活跃节点少... 那就用小的那个\r\n        let number = Math.min(this.dataSet.length, this.activeItemCount);\r\n        for(let i = 0; i < number; i++){\r\n            // 实例化节点 并初始化、设置内容\r\n            let node = cc.instantiate(this.pfb_item);\r\n            node.getComponent(BaseItem).init(this.eventListener);\r\n            this.setItemNode(node, i);\r\n\r\n            this.node_content.addChild(node);\r\n            this.activeNodes.push(node);\r\n        }\r\n\r\n        // 设置活跃的首尾节点下标\r\n        this.activeHeadIndex = 0;\r\n        this.activeTailIndex = number - 1;\r\n    },\r\n\r\n    // 设置节点内容\r\n    setItemNode(node, index){\r\n        let data = this.dataSet[index];\r\n        let comp = node.getComponent(BaseItem);\r\n        comp.setItem(data);\r\n\r\n        // 根据下标计算并修改y\r\n        node.y = -this.lineHeight * index;\r\n    },\r\n\r\n    // 滚动监听\r\n    onScrolling(){\r\n        // 判断上滑/下滑\r\n        let scrollUp = this.node_content.y > this.contentNodeLastY;\r\n        this.contentNodeLastY = this.node_content.y;\r\n\r\n        // 头节点\r\n        let headNode = this.activeNodes[0];\r\n        // 头节点距离屏幕顶端的距离\r\n        let dis_head = this.node_content.y + headNode.y;\r\n\r\n        if(scrollUp){\r\n            // 上滑 判断是否需要把头节点移动到尾部\r\n            // 头节点超出安全区 且 后面还有数据可以加载（避免下标超出数组长度）\r\n            if(dis_head > this.safeAreaHeight && this.activeTailIndex + 1 < this.dataSet.length){\r\n                // console.log(\"移除头部节点\");\r\n                headNode = this.activeNodes.shift();\r\n                this.activeNodes.push(headNode);\r\n                \r\n                // 修改活跃下标\r\n                this.activeTailIndex++;\r\n                this.activeHeadIndex++;\r\n                \r\n                // 设置节点内容\r\n                this.setItemNode(headNode, this.activeTailIndex);\r\n            }\r\n        }else{\r\n            // 下滑 判断是否需要把尾节点移动到头部\r\n            // 头节点在安全区内 且 前面还有数据\r\n            if(dis_head < this.safeAreaHeight && this.activeHeadIndex > 0){\r\n                // console.log(\"移除尾节点\");\r\n                tailNode = this.activeNodes.pop();\r\n                this.activeNodes.unshift(tailNode);\r\n    \r\n                this.activeTailIndex--;\r\n                this.activeHeadIndex--;\r\n    \r\n                this.setItemNode(tailNode, this.activeHeadIndex);\r\n            }\r\n        }\r\n    },\r\n});\r\n"]}